"use strict";
/**
 * Created by user on 2018/2/15/015.
 *
 * same as chinese_convert, but a little bug fix
 */
Object.defineProperty(exports, "__esModule", { value: true });
//import { cn2tw as _cn2tw, tw2cn as _tw2cn } from 'chinese_convert';
const table_1 = require("./table");
const core_1 = require("./core");
exports._call = core_1._call;
exports.defaultOptions = core_1.defaultOptions;
exports.getOptions = core_1.getOptions;
exports.getOptionsSkip = core_1.getOptionsSkip;
exports.REGEXP_TEST = core_1.REGEXP_TEST;
exports.SAFE_MODE_CHAR = core_1.SAFE_MODE_CHAR;
const zhConvert = require("./index");
const table_plus_1 = require("./table_plus");
function cn2tw(text, options = {}, ...argv) {
    return core_1._call(_cn2tw, text, options, ...argv);
}
exports.cn2tw = cn2tw;
function tw2cn(text, options = {}, ...argv) {
    return core_1._call(_tw2cn, text, options, ...argv);
}
exports.tw2cn = tw2cn;
exports.table_cn2tw = Object.assign({}, table_1.table_cn2tw, table_plus_1.table_cn2tw_plus);
exports.table_tw2cn = Object.assign({}, table_1.table_tw2cn, table_plus_1.table_tw2cn_plus);
function _cn2tw(text) {
    // @ts-ignore
    return core_1.textMap(text, exports.table_cn2tw);
}
exports._cn2tw = _cn2tw;
function _tw2cn(text) {
    // @ts-ignore
    return core_1.textMap(text, exports.table_tw2cn);
}
exports._tw2cn = _tw2cn;
exports.default = zhConvert;
//console.log(cn2tw('轉换最里后裡後轉换最后'));
//console.log(tw2cn('轉换最里后裡後轉换最后'));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7R0FJRzs7QUFFSCxxRUFBcUU7QUFFckUsbUNBR2lCO0FBRWpCLGlDQVVnQjtBQWdDZixnQkF6Q0EsWUFBSyxDQXlDQTtBQUlMLHlCQTVDQSxxQkFBYyxDQTRDQTtBQURkLHFCQTFDQSxpQkFBVSxDQTBDQTtBQUdWLHlCQTVDQSxxQkFBYyxDQTRDQTtBQURkLHNCQXhDQSxrQkFBVyxDQXdDQTtBQUVYLHlCQXpDQSxxQkFBYyxDQXlDQTtBQXRDZixxQ0FBcUM7QUFDckMsNkNBQWtFO0FBR2xFLFNBQWdCLEtBQUssQ0FBQyxJQUFZLEVBQUUsVUFBb0IsRUFBRSxFQUFFLEdBQUcsSUFBSTtJQUVsRSxPQUFPLFlBQUssQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQzlDLENBQUM7QUFIRCxzQkFHQztBQUVELFNBQWdCLEtBQUssQ0FBQyxJQUFZLEVBQUUsVUFBb0IsRUFBRSxFQUFFLEdBQUcsSUFBSTtJQUVsRSxPQUFPLFlBQUssQ0FBQyxNQUFNLEVBQUUsSUFBSSxFQUFFLE9BQU8sRUFBRSxHQUFHLElBQUksQ0FBQyxDQUFDO0FBQzlDLENBQUM7QUFIRCxzQkFHQztBQUVVLFFBQUEsV0FBVyxHQUFXLE1BQU0sQ0FBQyxNQUFNLENBQUMsRUFBRSxFQUFFLG1CQUFZLEVBQUUsNkJBQWdCLENBQUMsQ0FBQztBQUV4RSxRQUFBLFdBQVcsR0FBVyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxtQkFBWSxFQUFFLDZCQUFnQixDQUFDLENBQUM7QUFFbkYsU0FBZ0IsTUFBTSxDQUFDLElBQVk7SUFFbEMsYUFBYTtJQUNiLE9BQU8sY0FBTyxDQUFDLElBQUksRUFBRSxtQkFBVyxDQUFDLENBQUM7QUFDbkMsQ0FBQztBQUpELHdCQUlDO0FBRUQsU0FBZ0IsTUFBTSxDQUFDLElBQVk7SUFFbEMsYUFBYTtJQUNiLE9BQU8sY0FBTyxDQUFDLElBQUksRUFBRSxtQkFBVyxDQUFDLENBQUM7QUFDbkMsQ0FBQztBQUpELHdCQUlDO0FBYUQsa0JBQWUsU0FBUyxDQUFDO0FBRXpCLG9DQUFvQztBQUNwQyxvQ0FBb0MiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgdXNlciBvbiAyMDE4LzIvMTUvMDE1LlxuICpcbiAqIHNhbWUgYXMgY2hpbmVzZV9jb252ZXJ0LCBidXQgYSBsaXR0bGUgYnVnIGZpeFxuICovXG5cbi8vaW1wb3J0IHsgY24ydHcgYXMgX2NuMnR3LCB0dzJjbiBhcyBfdHcyY24gfSBmcm9tICdjaGluZXNlX2NvbnZlcnQnO1xuXG5pbXBvcnQge1xuXHR0YWJsZV9jbjJ0dyBhcyBfdGFibGVfY24ydHcsXG5cdHRhYmxlX3R3MmNuIGFzIF90YWJsZV90dzJjbixcbn0gZnJvbSAnLi90YWJsZSc7XG5cbmltcG9ydCB7XG5cdF9jYWxsLFxuXHRkZWZhdWx0T3B0aW9ucyxcblx0Z2V0T3B0aW9ucyxcblx0Z2V0T3B0aW9uc1NraXAsXG5cdElPcHRpb25zLFxuXHRJVGFibGUsXG5cdFJFR0VYUF9URVNULFxuXHRTQUZFX01PREVfQ0hBUixcblx0dGV4dE1hcCxcbn0gZnJvbSAnLi9jb3JlJztcbmltcG9ydCAqIGFzIHpoQ29udmVydCBmcm9tICcuL2luZGV4JztcbmltcG9ydCB7IHRhYmxlX2NuMnR3X3BsdXMsIHRhYmxlX3R3MmNuX3BsdXMgfSBmcm9tICcuL3RhYmxlX3BsdXMnO1xuaW1wb3J0IHsgd2lraV9zMnRfdjIsIHdpa2lfdDJzX3YyIH0gZnJvbSAnLi93aWtpcGVkaWEnO1xuXG5leHBvcnQgZnVuY3Rpb24gY24ydHcodGV4dDogc3RyaW5nLCBvcHRpb25zOiBJT3B0aW9ucyA9IHt9LCAuLi5hcmd2KTogc3RyaW5nXG57XG5cdHJldHVybiBfY2FsbChfY24ydHcsIHRleHQsIG9wdGlvbnMsIC4uLmFyZ3YpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gdHcyY24odGV4dDogc3RyaW5nLCBvcHRpb25zOiBJT3B0aW9ucyA9IHt9LCAuLi5hcmd2KTogc3RyaW5nXG57XG5cdHJldHVybiBfY2FsbChfdHcyY24sIHRleHQsIG9wdGlvbnMsIC4uLmFyZ3YpO1xufVxuXG5leHBvcnQgbGV0IHRhYmxlX2NuMnR3OiBJVGFibGUgPSBPYmplY3QuYXNzaWduKHt9LCBfdGFibGVfY24ydHcsIHRhYmxlX2NuMnR3X3BsdXMpO1xuXG5leHBvcnQgbGV0IHRhYmxlX3R3MmNuOiBJVGFibGUgPSBPYmplY3QuYXNzaWduKHt9LCBfdGFibGVfdHcyY24sIHRhYmxlX3R3MmNuX3BsdXMpO1xuXG5leHBvcnQgZnVuY3Rpb24gX2NuMnR3KHRleHQ6IHN0cmluZyk6IHN0cmluZ1xue1xuXHQvLyBAdHMtaWdub3JlXG5cdHJldHVybiB0ZXh0TWFwKHRleHQsIHRhYmxlX2NuMnR3KTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIF90dzJjbih0ZXh0OiBzdHJpbmcpOiBzdHJpbmdcbntcblx0Ly8gQHRzLWlnbm9yZVxuXHRyZXR1cm4gdGV4dE1hcCh0ZXh0LCB0YWJsZV90dzJjbik7XG59XG5cbmV4cG9ydCB7XG5cdF9jYWxsLFxuXHRJT3B0aW9ucyxcblx0SVRhYmxlLFxuXHRnZXRPcHRpb25zLFxuXHRkZWZhdWx0T3B0aW9ucyxcblx0UkVHRVhQX1RFU1QsXG5cdGdldE9wdGlvbnNTa2lwLFxuXHRTQUZFX01PREVfQ0hBUixcbn1cblxuZXhwb3J0IGRlZmF1bHQgemhDb252ZXJ0O1xuXG4vL2NvbnNvbGUubG9nKGNuMnR3KCfovYnmjaLmnIDph4zlkI7oo6HlvozovYnmjaLmnIDlkI4nKSk7XG4vL2NvbnNvbGUubG9nKHR3MmNuKCfovYnmjaLmnIDph4zlkI7oo6HlvozovYnmjaLmnIDlkI4nKSk7XG4iXX0=