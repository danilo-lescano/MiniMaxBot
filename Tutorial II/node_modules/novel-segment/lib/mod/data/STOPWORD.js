"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const array_hyper_unique_1 = require("array-hyper-unique");
var NS_STOPWORD;
(function (NS_STOPWORD) {
    var _a;
    NS_STOPWORD._TABLE = [
        ' ,.;+-|/\\\'":?<>[]{}=!@#$%^&*()~`' +
            '。，、＇：∶；?‘’“”〝〞ˆˇ﹕︰﹔﹖﹑·¨….¸;！´？！～—ˉ｜‖＂〃｀@﹫¡¿﹏﹋﹌︴々﹟#﹩$﹠&﹪%*﹡﹢﹦' +
            '﹤‐￣¯―﹨ˆ˜﹍﹎+=<­＿_-\ˇ~﹉﹊（）〈〉‹›﹛﹜『』〖〗［］《》〔〕{}「」【】︵︷︿︹︽_﹁﹃︻︶︸' +
            '﹀︺︾ˉ﹂﹄︼＋－×÷﹢﹣±／＝≈≡≠∧∨∑∏∪∩∈⊙⌒⊥∥∠∽≌＜＞≤≥≮≯∧∨√﹙﹚[]﹛﹜∫∮∝∞⊙∏' +
            '┌┬┐┏┳┓╒╤╕─│├┼┤┣╋┫╞╪╡━┃└┴┘┗┻┛╘╧╛┄┆┅┇╭─╮┏━┓╔╦╗┈┊│╳│┃┃╠╬╣┉┋╰─╯┗━┛' +
            '╚╩╝╲╱┞┟┠┡┢┦┧┨┩┪╉╊┭┮┯┰┱┲┵┶┷┸╇╈┹┺┽┾┿╀╁╂╃╄╅╆' +
            '○◇□△▽☆●◆■▲▼★♠♥♦♣☼☺◘♀√☻◙♂×▁▂▃▄▅▆▇█⊙◎۞卍卐╱╲▁▏↖↗↑←↔◤◥╲╱▔▕↙↘↓→↕◣◢∷▒░℡™',
        '．・　※',
    ].join('');
    _a = parseStopWord(NS_STOPWORD._TABLE), NS_STOPWORD._STOPWORD = _a._STOPWORD, NS_STOPWORD.STOPWORD = _a.STOPWORD, NS_STOPWORD.STOPWORD2 = _a.STOPWORD2;
    function parseStopWord(_STOPWORD) {
        if (typeof _STOPWORD === 'string') {
            _STOPWORD = _STOPWORD.split('');
            //_STOPWORD = UString.split(_STOPWORD, '');
        }
        else if (!Array.isArray(_STOPWORD)) {
            throw new TypeError(`table must is string or string[]`);
        }
        _STOPWORD = array_hyper_unique_1.array_unique(_STOPWORD);
        let STOPWORD = {};
        let STOPWORD2 = {};
        for (let i in _STOPWORD) {
            if (_STOPWORD[i] == '')
                continue;
            let len = _STOPWORD[i].length;
            STOPWORD[_STOPWORD[i]] = len;
            if (!STOPWORD2[len])
                STOPWORD2[len] = {};
            STOPWORD2[len][_STOPWORD[i]] = len;
        }
        return {
            _STOPWORD,
            STOPWORD,
            STOPWORD2,
        };
    }
    NS_STOPWORD.parseStopWord = parseStopWord;
})(NS_STOPWORD = exports.NS_STOPWORD || (exports.NS_STOPWORD = {}));
exports._STOPWORD = NS_STOPWORD._STOPWORD, exports.STOPWORD = NS_STOPWORD.STOPWORD, exports.STOPWORD2 = NS_STOPWORD.STOPWORD2;
const self = require("./STOPWORD");
exports.default = self;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU1RPUFdPUkQuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJTVE9QV09SRC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLDJEQUFrRDtBQUVsRCxJQUFpQixXQUFXLENBbUQzQjtBQW5ERCxXQUFpQixXQUFXOztJQUVkLGtCQUFNLEdBQUc7UUFDckIsb0NBQW9DO1lBQ3BDLDhEQUE4RDtZQUM5RCwyREFBMkQ7WUFDM0Qsd0RBQXdEO1lBQ3hELGdFQUFnRTtZQUNoRSwyQ0FBMkM7WUFDM0MsbUVBQW1FO1FBQ25FLE1BQU07S0FDTixDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUVFLHNDQUEwRCxFQUF4RCxvQ0FBUyxFQUFFLGtDQUFRLEVBQUUsb0NBQVMsQ0FBMkI7SUFFeEUsU0FBZ0IsYUFBYSxDQUFDLFNBQTRCO1FBRXpELElBQUksT0FBTyxTQUFTLEtBQUssUUFBUSxFQUNqQztZQUNDLFNBQVMsR0FBRyxTQUFTLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDO1lBQ2hDLDJDQUEyQztTQUMzQzthQUNJLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUNsQztZQUNDLE1BQU0sSUFBSSxTQUFTLENBQUMsa0NBQWtDLENBQUMsQ0FBQTtTQUN2RDtRQUVELFNBQVMsR0FBRyxpQ0FBWSxDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBRXBDLElBQUksUUFBUSxHQUFHLEVBRWQsQ0FBQztRQUNGLElBQUksU0FBUyxHQUFHLEVBRWYsQ0FBQztRQUVGLEtBQUssSUFBSSxDQUFDLElBQUksU0FBUyxFQUN2QjtZQUNDLElBQUksU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLEVBQUU7Z0JBQUUsU0FBUztZQUNqQyxJQUFJLEdBQUcsR0FBRyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDO1lBQzlCLFFBQVEsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7WUFDN0IsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUM7Z0JBQUUsU0FBUyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUN6QyxTQUFTLENBQUMsR0FBRyxDQUFDLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsR0FBRyxDQUFDO1NBQ25DO1FBRUQsT0FBTztZQUNOLFNBQVM7WUFDVCxRQUFRO1lBQ1IsU0FBUztTQUNULENBQUE7SUFDRixDQUFDO0lBbkNlLHlCQUFhLGdCQW1DNUIsQ0FBQTtBQUNGLENBQUMsRUFuRGdCLFdBQVcsR0FBWCxtQkFBVyxLQUFYLG1CQUFXLFFBbUQzQjtBQUVELDhIQUE4RDtBQUU5RCxtQ0FBbUM7QUFDbkMsa0JBQWUsSUFBSSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFVTdHJpbmcgPSByZXF1aXJlKCd1bmktc3RyaW5nJyk7XG5pbXBvcnQgeyBhcnJheV91bmlxdWUgfSBmcm9tICdhcnJheS1oeXBlci11bmlxdWUnO1xuXG5leHBvcnQgbmFtZXNwYWNlIE5TX1NUT1BXT1JEXG57XG5cdGV4cG9ydCBjb25zdCBfVEFCTEUgPSBbXG5cdFx0JyAsLjsrLXwvXFxcXFxcJ1wiOj88Pltde309IUAjJCVeJiooKX5gJyArXG5cdFx0J+OAgu+8jOOAge+8h++8muKItu+8mz/igJjigJnigJzigJ3jgJ3jgJ7LhsuH77mV77iw77mU77mW77mRwrfCqOKApi7CuDvvvIHCtO+8n++8ge+9nuKAlMuJ772c4oCW77yC44CD772AQO+5q8Khwr/vuY/vuYvvuYzvuLTjgIXvuZ8j77mpJO+5oCbvuaolKu+5oe+5ou+5picgK1xuXHRcdCfvuaTigJDvv6PCr+KAle+5qMuGy5zvuY3vuY4rPTzCre+8v18tXFzLh37vuYnvuYrvvIjvvInjgIjjgInigLnigLrvuZvvuZzjgI7jgI/jgJbjgJfvvLvvvL3jgIrjgIvjgJTjgJV7feOAjOOAjeOAkOOAke+4te+4t++4v++4ue+4vV/vuYHvuYPvuLvvuLbvuLgnICtcblx0XHQn77mA77i677i+y4nvuYLvuYTvuLzvvIvvvI3Dl8O377mi77mjwrHvvI/vvJ3iiYjiiaHiiaDiiKfiiKjiiJHiiI/iiKriiKniiIjiipnijJLiiqXiiKXiiKDiiL3iiYzvvJzvvJ7iiaTiiaXiia7iia/iiKfiiKjiiJrvuZnvuZpbXe+5m++5nOKIq+KIruKIneKInuKKmeKIjycgK1xuXHRcdCfilIzilKzilJDilI/ilLPilJPilZLilaTilZXilIDilILilJzilLzilKTilKPilYvilKvilZ7ilarilaHilIHilIPilJTilLTilJjilJfilLvilJvilZjilafilZvilITilIbilIXilIfila3ilIDila7ilI/ilIHilJPilZTilabilZfilIjilIrilILilbPilILilIPilIPilaDilazilaPilInilIvilbDilIDila/ilJfilIHilJsnICtcblx0XHQn4pWa4pWp4pWd4pWy4pWx4pSe4pSf4pSg4pSh4pSi4pSm4pSn4pSo4pSp4pSq4pWJ4pWK4pSt4pSu4pSv4pSw4pSx4pSy4pS14pS24pS34pS44pWH4pWI4pS54pS64pS94pS+4pS/4pWA4pWB4pWC4pWD4pWE4pWF4pWGJyArXG5cdFx0J+KXi+KXh+KWoeKWs+KWveKYhuKXj+KXhuKWoOKWsuKWvOKYheKZoOKZpeKZpuKZo+KYvOKYuuKXmOKZgOKImuKYu+KXmeKZgsOX4paB4paC4paD4paE4paF4paG4paH4paI4oqZ4peO257ljY3ljZDilbHilbLiloHilo/ihpbihpfihpHihpDihpTil6Til6XilbLilbHilpTilpXihpnihpjihpPihpLihpXil6Pil6LiiLfilpLilpHihKHihKInLFxuXHRcdCfvvI7jg7vjgIDigLsnLFxuXHRdLmpvaW4oJycpO1xuXG5cdGV4cG9ydCBjb25zdCB7IF9TVE9QV09SRCwgU1RPUFdPUkQsIFNUT1BXT1JEMiB9ID0gcGFyc2VTdG9wV29yZChfVEFCTEUpO1xuXG5cdGV4cG9ydCBmdW5jdGlvbiBwYXJzZVN0b3BXb3JkKF9TVE9QV09SRDogc3RyaW5nIHwgc3RyaW5nW10pXG5cdHtcblx0XHRpZiAodHlwZW9mIF9TVE9QV09SRCA9PT0gJ3N0cmluZycpXG5cdFx0e1xuXHRcdFx0X1NUT1BXT1JEID0gX1NUT1BXT1JELnNwbGl0KCcnKTtcblx0XHRcdC8vX1NUT1BXT1JEID0gVVN0cmluZy5zcGxpdChfU1RPUFdPUkQsICcnKTtcblx0XHR9XG5cdFx0ZWxzZSBpZiAoIUFycmF5LmlzQXJyYXkoX1NUT1BXT1JEKSlcblx0XHR7XG5cdFx0XHR0aHJvdyBuZXcgVHlwZUVycm9yKGB0YWJsZSBtdXN0IGlzIHN0cmluZyBvciBzdHJpbmdbXWApXG5cdFx0fVxuXG5cdFx0X1NUT1BXT1JEID0gYXJyYXlfdW5pcXVlKF9TVE9QV09SRCk7XG5cblx0XHRsZXQgU1RPUFdPUkQgPSB7fSBhcyB7XG5cdFx0XHRba2V5OiBzdHJpbmddOiBudW1iZXIsXG5cdFx0fTtcblx0XHRsZXQgU1RPUFdPUkQyID0ge30gYXMge1xuXHRcdFx0W2tleTogbnVtYmVyXTogdHlwZW9mIFNUT1BXT1JELFxuXHRcdH07XG5cblx0XHRmb3IgKGxldCBpIGluIF9TVE9QV09SRClcblx0XHR7XG5cdFx0XHRpZiAoX1NUT1BXT1JEW2ldID09ICcnKSBjb250aW51ZTtcblx0XHRcdGxldCBsZW4gPSBfU1RPUFdPUkRbaV0ubGVuZ3RoO1xuXHRcdFx0U1RPUFdPUkRbX1NUT1BXT1JEW2ldXSA9IGxlbjtcblx0XHRcdGlmICghU1RPUFdPUkQyW2xlbl0pIFNUT1BXT1JEMltsZW5dID0ge307XG5cdFx0XHRTVE9QV09SRDJbbGVuXVtfU1RPUFdPUkRbaV1dID0gbGVuO1xuXHRcdH1cblxuXHRcdHJldHVybiB7XG5cdFx0XHRfU1RPUFdPUkQsXG5cdFx0XHRTVE9QV09SRCxcblx0XHRcdFNUT1BXT1JEMixcblx0XHR9XG5cdH1cbn1cblxuZXhwb3J0IGNvbnN0IHsgX1NUT1BXT1JELCBTVE9QV09SRCwgU1RPUFdPUkQyIH0gPSBOU19TVE9QV09SRDtcblxuaW1wb3J0ICogYXMgc2VsZiBmcm9tICcuL1NUT1BXT1JEJztcbmV4cG9ydCBkZWZhdWx0IHNlbGY7XG4iXX0=